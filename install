#!/bin/bash

HOME=/home/$SUDO_USER

raspbian_old () {
    DIST_CHK=$(cat /etc/os-release | grep "wheezy")

    if [ "" == "$DIST_CHK" ];then
        false
    else
        true
    fi
}

apt_pkg_req () {
    APT_CHK=$(dpkg-query -W --showformat='${Status}\n' $1|grep "install ok installed")

    if [ "" == "$APT_CHK" ]; then
        true
    else
        false
    fi
}

if [ $(id -u) -ne 0 ]; then
    printf "Install must be run as root. Try 'sudo ./install'\n"
    exit 1
fi

printf "Installing dependencies...\n"

if ! raspbian_old; then
    if apt_pkg_req "libboost-system1.55.0"; then
        printf "Updating package indexes..."
        sudo apt-get update
        sudo apt-get --yes --force-yes install libboost-system1.55.0
    fi
else
    if apt_pkg_req "libboost-system1.50.0"; then
        printf "Updating package indexes..."
        sudo apt-get update
        sudo apt-get --yes --force-yes install libboost-system1.50.0
    fi
fi

if [ -f /usr/local/lib/libserialport.so.0.0.0 ]; then
    printf "Dependencies already installed. Updating...\n"
fi

cp ./dependencies/libs/libserialport* /usr/local/lib/

if [ ! -f /usr/local/lib/libserialport.so.0 ]; then
    ln -s /usr/local/lib/libserialport.so.0.0.0 /usr/local/lib/libserialport.so.0
fi

if [ ! -f /usr/local/lib/libserialport.so ]; then
    ln -s /usr/local/lib/libserialport.so.0.0.0 /usr/local/lib/libserialport.so
fi

chown root:staff /usr/local/lib/libserialport*
ldconfig

if [ ! -f /usr/bin/flotilla ]; then
    printf "Installing Flotilla daemon...\n"
    if ! raspbian_old; then
        cp flotilla /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    else
        cp flotilla-wheezy /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    fi
else
    printf "Flotilla already installed. Updating...\n"
    if ! raspbian_old; then
        cp flotilla /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    else
        cp flotilla-wheezy /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    fi
fi

if [ ! -f /etc/init.d/flotillad ]; then
    printf "Setting up init script...\n"
    cp dependencies/flotillad /etc/init.d/
    chmod +x /etc/init.d/flotillad
    update-rc.d flotillad defaults
    /etc/init.d/flotillad start &
else
    printf "Init script already on system. Updating...\n"
    cp dependencies/flotillad /etc/init.d/
    chmod +x /etc/init.d/flotillad
    update-rc.d flotillad defaults
    /etc/init.d/flotillad restart &
fi

if [ ! -f $HOME/.config/autostart/flotilla.desktop ]; then
    printf "Setting up autostart...\n"
    mkdir -p $HOME/.config/autostart
    cp dependencies/flotilla.desktop $HOME/.config/autostart/
else
    printf "Autostart already configured. Updating...\n"
    cp dependencies/flotilla.desktop $HOME/.config/autostart/
fi

chown -R $SUDO_USER:pi $HOME/.config

printf "Installing Rockpool...\n"

cp -r rockpool /opt
cp dependencies/rockpool /usr/sbin/
chmod +x /usr/sbin/rockpool
cp dependencies/rockpool.png /usr/share/pixmaps/
cp dependencies/rockpool.desktop /usr/share/applications/

printf "\nAll done! Time to set sail.\n"
printf "Rebbot your Pi and enjoy Flotilla!\n"

exit 0
